== Welcome to Snarf

Thanks for your help, Jim.  I'm having some trouble with my model in another application
and whipped up this example so you can give me a hand.

There are 3 models:

 * DataSource
 * ExportRecord
 * Blob

Every ExportRecord has 1 and only 1 DataSource.
The ExportRecord contains a field called checksum, which is the actual checksum of the data
in the "data_source".

So:
  data_source has_many export_records
  export_record belongs_to data_source

Now the acutall data is stored in the Blob model based on the checksum.

Each time I export data from a "data_source", it will create an ExportRecord for each row, but
it will only create a Blob record if one does not exist.  So... we save on space.

For example, let's say a data source has 100 records.  On the 1st export we will create 100
ExportRecords and 100 Blobs.  Assuming the data has not changed, on subsequen runs it will
create 100 ExportRecords and 0 blobs.

So... each export_record should be associated to one and only one blob.
And a blob may belong to numerous export records.

Since the "key" is the checksum, I don't think I need an intersection table for the
association, but I don't know how to code that up.

Well.. this seemed to work.  Here is the export_record accociation:

  belongs_to :blob, foreign_key: :checksum

And the blob association:

  has_many :export_records, foreign_key: :checksum

So after a "rake db:seed" this seems to work:

    irb(main):006:0> er = ExportRecord.first
      ExportRecord Load (0.2ms)  SELECT "export_records".* FROM "export_records" LIMIT 1
    => #<ExportRecord id: 1, data_source_id: 1, primary_key: "1", checksum: "e5fa44f2b31c1fb553b6021e7360d07d5d91ff5e", created_at: "2013-06-05 21:42:15", updated_at: "2013-06-05 21:42:15">
    irb(main):007:0> er.blob.data
      Blob Load (0.2ms)  SELECT "blobs".* FROM "blobs" WHERE "blobs"."checksum" = 'e5fa44f2b31c1fb553b6021e7360d07d5d91ff5e' LIMIT 1
    => "data_one"
    irb(main):008:0> b = Blob.first
      Blob Load (0.2ms)  SELECT "blobs".* FROM "blobs" LIMIT 1
    => #<Blob id: 1, checksum: "e5fa44f2b31c1fb553b6021e7360d07d5d91ff5e", created_at: "2013-06-05 21:42:15", updated_at: "2013-06-05 21:42:15", data: "data_one">
    irb(main):009:0> b.export_records.count
       (0.2ms)  SELECT COUNT(*) FROM "export_records" WHERE "export_records"."checksum" = 'e5fa44f2b31c1fb553b6021e7360d07d5d91ff5e'
    => 4

== Getting Started

git clone https://github.com/jongillies/snarf.git snarf
cd snarf
bundle

rake db:migrate
rake db:seed

rails s

http://localhost:3000/data_sources

http://localhost:3000/export_records

http://localhost:3000/blobs


== API Testing

When using the "path" option:

  version 'v1', using: :path

  $ curl http://localhost:3000/api/v1/ping
  {"ping":"pong"}
  $ curl http://localhost:3000/api/v2/ping
  {"ping":"pong2"}

When using the "param" option:

  version 'v1', using: :param

  $ curl http://localhost:3000/api/ping?apiver=v1
  {"ping":"pong"}
  $ curl http://localhost:3000/api/ping?apiver=v2
  {"ping":"pong2"}

When using the "header" option:

  version 'v1', using: :header, vendor: 'thundercats'

  $ curl -H "Accept: application/vnd.thundercats-v1+json" http://localhost:3000/api/ping
  {"ping":"pong"}
  $ curl -H "Accept: application/vnd.thundercats-v2+json" http://localhost:3000/api/ping
  {"ping":"pong"}


